trigger: none

pool:
  name: AUS-POOL

parameters:
  - name: rg_name
    displayName: "Resource Group Name"
    type: string
  - name: location
    displayName: "Location"
    type: string
  - name: dev_stg
    displayName: "Storage Account Name"
    type: string
  - name: vnet_name
    displayName: "Virtual Network Name"
    type: string
  - name: subnet
    displayName: "Subnet Name"
    type: string
  - name: vm_name
    displayName: "VM Name"
    type: string

stages:
  - stage: Terraform_Deploy
    jobs:
      - job: DeployInfra
        steps:

        - checkout: self

        - task: Bash@3
          displayName: Install Terraform
          inputs:
            targetType: 'inline'
            script: |
              sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl unzip
              curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
              echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
              sudo apt-get update && sudo apt-get install terraform -y
              terraform -version

        - task: Bash@3
          displayName: Terraform Init
          inputs:
            targetType: 'inline'
            script: terraform init

        - task: Bash@3
          displayName: Terraform Validate
          inputs:
            targetType: 'inline'
            script: terraform validate

        - task: Bash@3
          displayName: Terraform Plan
          inputs:
            targetType: 'inline'
            script: |
              terraform plan \
              -var="rg_name=${{ parameters.rg_name }}" \
              -var="location=${{ parameters.location }}" \
              -var="dev_stg=${{ parameters.dev_stg }}" \
              -var="vnet_name=${{ parameters.vnet_name }}" \
              -var="subnet=${{ parameters.subnet }}" \
              -var="vm_name=${{ parameters.vm_name }}"

        - task: Bash@3
          displayName: Terraform Apply
          inputs:
            targetType: 'inline'
            script: |
              terraform apply -auto-approve \
              -var="rg_name=${{ parameters.rg_name }}" \
              -var="location=${{ parameters.location }}" \
              -var="dev_stg=${{ parameters.dev_stg }}" \
              -var="vnet_name=${{ parameters.vnet_name }}" \
              -var="subnet=${{ parameters.subnet }}" \
              -var="vm_name=${{ parameters.vm_name }}"
