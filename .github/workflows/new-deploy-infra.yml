name: Terraform Deploy All resources in one click

on:
  workflow_dispatch:
    inputs:
      rg_name:
        description: 'Resource Group Name'
        required: true
        default: 'my-rg'
      location:
        description: 'Azure Region'
        required: true
        default: 'East US'
      dev_stg:
        description: 'Storage Account Name'
        required: true
        default: 'mystorageaccount'
      vm_name:
        description: 'VM Name'
        required: true
        default: 'my-vm'
      vnet_name:
        description: 'VNet Name'
        required: true
        default: 'my-vnet'
      subnet:
        description: 'Subnet Name'
        required: true
        default: 'my-subnet'

jobs:
  terraform:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        env:
          ARM_USE_OIDC: true
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        run: terraform init -upgrade   # ðŸ‘ˆ updated here

      - name: Terraform Validate
        env:
          ARM_USE_OIDC: true
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        run: terraform validate

      - name: Terraform Plan
        env:
          ARM_USE_OIDC: true
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        run: |
          terraform plan \
            -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -var "tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
            -var "client_id=${{ secrets.AZURE_CLIENT_ID }}" \
            -var "rg_name=${{ github.event.inputs.rg_name }}" \
            -var "location=${{ github.event.inputs.location }}" \
            -var "dev_stg=${{ github.event.inputs.dev_stg }}" \
            -var "vm_name=${{ github.event.inputs.vm_name }}" \
            -var "vnet_name=${{ github.event.inputs.vnet_name }}" \
            -var "subnet=${{ github.event.inputs.subnet }}"

      - name: Terraform Apply
        env:
          ARM_USE_OIDC: true
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        run: |
          terraform apply -auto-approve \
            -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -var "tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
            -var "client_id=${{ secrets.AZURE_CLIENT_ID }}" \
            -var "rg_name=${{ github.event.inputs.rg_name }}" \
            -var "location=${{ github.event.inputs.location }}" \
            -var "dev_stg=${{ github.event.inputs.dev_stg }}" \
            -var "vm_name=${{ github.event.inputs.vm_name }}" \
            -var "vnet_name=${{ github.event.inputs.vnet_name }}" \
            -var "subnet=${{ github.event.inputs.subnet }}"
